{"version":3,"sources":["components/Header.js","hooks/useSelect.js","components/Formulario.js","components/Noticia.js","components/ListadoNoticias.js","components/AppContainer.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","useSelect","stateInicial","opciones","useState","state","actualizarState","value","onChange","e","target","map","opcion","key","label","Formulario","guardarCategoria","categoria","SelectNoticias","style","buscador","onSubmit","preventDefault","heading","type","btn_block","Noticia","noticia","urlToImage","url","title","description","source","imagen","src","alt","name","rel","ListadoNoticias","noticias","AppContainer","guadarNoticias","useEffect","a","fetch","respuesta","json","articles","consultarAPI","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0751d7f8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({titulo}) => {\n  return ( \n      <nav className='nav-wrapper light-blue darken-3'>\n        <a href='#!' className='brand-logo center'>{titulo}</a>\n      </nav>\n   );\n}\n \nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired\n}\n\nexport default Header;","import React, {useState} from 'react';\n\nconst useSelect = (stateInicial, opciones) => {\n\n  // State del custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const SelectNoticias = () => (\n    <select\n      className='browser-default'\n      value={state}\n      onChange={e => actualizarState(e.target.value)}\n    >\n    {opciones.map(opcion => (\n       <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\n    ))}\n    </select>\n  );\n\n  return [state, SelectNoticias]; \n\n  \n}\n \nexport default useSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Formulario.module.css';\nimport useSelect from '../hooks/useSelect'; \n\nconst Formulario = ({guardarCategoria }) => {\n\n  const OPCIONES = [\n    {value: 'general', label: 'General'},\n    {value: 'business', label: 'Negocios'},\n    {value: 'entertainment', label: 'Entretenimiento'},\n    {value: 'health', label: 'Salud'},\n    {value: 'science', label: 'Ciencia'},\n    {value: 'sports', label: 'Deportes'}, \n    {value: 'technology', label: 'Tecnología'}\n\n  ]\n  \n  // utilizar custom hook\n  const [ categoria, SelectNoticias ] = useSelect('general', OPCIONES);\n\n  // Submit al form, pasar categoria a app.js\n  const buscarNoticias = e => {\n    e.preventDefault();\n\n    guardarCategoria(categoria)\n  }\n\n  return ( \n    <div className={`${style.buscador} row`}>\n      <div className='col s12 m8 offset-m2'>\n        <form\n          onSubmit={buscarNoticias }\n        >\n          <h2 className={style.heading}>Encuentra noticias por Categoría</h2>\n\n          <SelectNoticias />\n\n\n          <div className='input-field col s12'>\n            <input \n                type='submit' \n                className={`${style.btn_block} btn-large amber darken-2`}\n                value='Buscar'\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n   );\n}\n\nFormulario.propTypes = {\n  guardarCategoria: PropTypes.func.isRequired\n}\n \nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Noticia = ({noticia}) => {\n\n  // Extraer los datos \n  const { urlToImage, url, title, description, source } = noticia; \n\n  const imagen = (urlToImage) \n  ? \n      <div className='card-image'>\n        <img src={urlToImage }  alt={title}/>\n        <span className='card-title'>{source.name}</span>\n      </div>\n  : null;\n\n  return ( \n      <div className='col s12 m6 l4'>\n        <div className='card'>\n          {imagen}\n          <div className='card-content'>\n            <h5>{title}</h5>\n            <p>{description}</p>\n          </div>\n\n          <div className='card-action'>\n            <a\n              href={url}\n              target={'_blank'}\n              rel='noopener noreferrer'\n              className='waves-effect waves-light button btn'\n            >Ver noticia completa</a>\n\n          </div>\n\n        </div>\n      </div>\n       \n   );\n}\n\nNoticia.propTypes = {\n  noticia: PropTypes.object.isRequired\n}\n \nexport default Noticia;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Noticia from './Noticia';\n\nconst ListadoNoticias = ({noticias }) => {\n  return ( \n    <div className='row'>\n    {noticias.map( noticia => (\n       <Noticia \n          key={noticia.url}\n          noticia={noticia}\n       />\n    ))}\n\n  </div>\n   );\n}\n\nListadoNoticias.propTypes = {\n  noticias: PropTypes.array.isRequired\n}\n \nexport default ListadoNoticias;","import React, { Fragment, useState, useEffect } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario'; \nimport ListadoNoticias from './ListadoNoticias';\n\nconst AppContainer = () => {\n\n  // Definir la categoria y noticias\n  const [categoria, guardarCategoria] = useState('');\n  const [noticias, guadarNoticias] = useState([]);\n\n  // const APIKEY = '13da34c582b24cc19d5d50d7de01aa6c';\n  useEffect(() => {\n      const consultarAPI = async () => {\n        const url = `https://newsapi.org/v2/top-headlines?country=mx&category=${categoria}&apiKey=13da34c582b24cc19d5d50d7de01aa6c`;\n\n        const respuesta = await fetch(url);\n        const noticias = await respuesta.json(); \n\n        guadarNoticias(noticias.articles );\n      }\n      consultarAPI();\n  }, [categoria ]);\n   \n  return ( \n    <Fragment>\n      <Header \n        titulo='Buscador de Noticias'\n      />\n      <div className='container white'>\n        <Formulario \n          guardarCategoria={guardarCategoria} \n        /> \n        <ListadoNoticias \n            noticias={noticias}\n        />\n      </div>\n    </Fragment>\n   );\n}\n \nexport default AppContainer;","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AppContainer from './components/AppContainer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path='/' component={AppContainer} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__sN5Ey\",\"buscador\":\"Formulario_buscador__2ABO4\",\"btn_block\":\"Formulario_btn_block__3xO29\"};"],"sourceRoot":""}